/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kelompok5.kasir.ui;

import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import com.kelompok5.kasir.dao.ItemDaoImpl;
import com.kelompok5.kasir.dao.ProductDaoImpl;
import com.kelompok5.kasir.dao.TransactionDaoImpl;
import com.kelompok5.kasir.model.Item;
import com.kelompok5.kasir.model.Product;
import com.kelompok5.kasir.model.Transaction;
import raven.toast.Notifications;

import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

public class Main extends javax.swing.JFrame {

    public Main() {
        initComponents();
        updateTotal(0);
        updateCashback(0);
        txtNotEnough.setVisible(false);

        setupSearchTable();
        updateSearchTable("");

        setupProductTable();
        updateProductTable();

        setupCartTable();
        updateCartTable();

        setupTransactionTable();
        updateTransactionTable();

        setupItemTable();

        FlatMacDarkLaf.setup();
        Notifications.getInstance().setJFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        kasirPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSearchProduct = new javax.swing.JTable();
        tfSearchProduct = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btAddToCart = new javax.swing.JButton();
        btDeleteCartItem = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfQuantity = new javax.swing.JTextField();
        btSearchProduct = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCart = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        tfAmounPaid = new javax.swing.JTextField();
        btPay = new javax.swing.JButton();
        txtTotal = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtCashback = new javax.swing.JLabel();
        btSaveTransaction = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNotEnough = new javax.swing.JLabel();
        productPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        tfProductName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        tfProductPrice = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        tfProductStock = new javax.swing.JTextField();
        btProductAdd = new javax.swing.JButton();
        btProductUpdate = new javax.swing.JButton();
        btProductDelete = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbProduct = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTransaction = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbItemTransaction = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kasir");

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tbSearchProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbSearchProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Qty", "Harga"
            }
        ));
        tbSearchProduct.setRowHeight(30);
        jScrollPane1.setViewportView(tbSearchProduct);

        tfSearchProduct.setPreferredSize(new java.awt.Dimension(64, 32));
        tfSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchProductActionPerformed(evt);
            }
        });

        jLabel1.setText("Cari Produk");

        btAddToCart.setText("Tambah");
        btAddToCart.setPreferredSize(new java.awt.Dimension(73, 33));
        btAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddToCartActionPerformed(evt);
            }
        });

        btDeleteCartItem.setText("Hapus");
        btDeleteCartItem.setPreferredSize(new java.awt.Dimension(72, 33));
        btDeleteCartItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteCartItemActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        tfQuantity.setPreferredSize(new java.awt.Dimension(64, 32));

        btSearchProduct.setText("Cari");
        btSearchProduct.setPreferredSize(new java.awt.Dimension(72, 33));
        btSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchProductActionPerformed(evt);
            }
        });

        tbCart.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Qty", "Harga", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCart.setRowHeight(30);
        tbCart.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbCart);

        jLabel10.setText("Uang dibayarkan");

        tfAmounPaid.setPreferredSize(new java.awt.Dimension(64, 32));

        btPay.setText("Bayar");
        btPay.setPreferredSize(new java.awt.Dimension(72, 33));
        btPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPayActionPerformed(evt);
            }
        });

        txtTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTotal.setText("100.000");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Total:  ");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Kembalian:  ");

        txtCashback.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCashback.setText("100.000");

        btSaveTransaction.setText("Simpan");
        btSaveTransaction.setPreferredSize(new java.awt.Dimension(72, 33));
        btSaveTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveTransactionActionPerformed(evt);
            }
        });

        jLabel2.setText("Keranjang");

        txtNotEnough.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNotEnough.setText("Uang dibayarkan kurang!");

        javax.swing.GroupLayout kasirPanelLayout = new javax.swing.GroupLayout(kasirPanel);
        kasirPanel.setLayout(kasirPanelLayout);
        kasirPanelLayout.setHorizontalGroup(
            kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kasirPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kasirPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btDeleteCartItem, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kasirPanelLayout.createSequentialGroup()
                        .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSearchProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
                .addGap(56, 56, 56)
                .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kasirPanelLayout.createSequentialGroup()
                        .addComponent(tfQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kasirPanelLayout.createSequentialGroup()
                        .addComponent(tfAmounPaid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPay, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kasirPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, 0)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kasirPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, 0)
                        .addComponent(txtCashback, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btSaveTransaction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNotEnough, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        kasirPanelLayout.setVerticalGroup(
            kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kasirPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kasirPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(kasirPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btDeleteCartItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kasirPanelLayout.createSequentialGroup()
                        .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAmounPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(kasirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCashback)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNotEnough)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(btSaveTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Kasir", kasirPanel);

        jLabel20.setText("Nama Produk");

        tfProductName.setMinimumSize(new java.awt.Dimension(64, 32));
        tfProductName.setPreferredSize(new java.awt.Dimension(64, 32));
        tfProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProductNameActionPerformed(evt);
            }
        });

        jLabel21.setText("Harga Produk");

        tfProductPrice.setPreferredSize(new java.awt.Dimension(64, 32));
        tfProductPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProductPriceActionPerformed(evt);
            }
        });

        jLabel22.setText("Stock Produk");

        tfProductStock.setPreferredSize(new java.awt.Dimension(64, 32));
        tfProductStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProductStockActionPerformed(evt);
            }
        });

        btProductAdd.setText("Tambah Baru");
        btProductAdd.setPreferredSize(new java.awt.Dimension(100, 33));
        btProductAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProductAddActionPerformed(evt);
            }
        });

        btProductUpdate.setText("Ubah Produk");
        btProductUpdate.setPreferredSize(new java.awt.Dimension(98, 33));
        btProductUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProductUpdateActionPerformed(evt);
            }
        });

        btProductDelete.setText("Hapus Produk");
        btProductDelete.setPreferredSize(new java.awt.Dimension(104, 33));
        btProductDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProductDeleteActionPerformed(evt);
            }
        });

        tbProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Produk", "Nama", "Harga", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProduct.setRowHeight(30);
        tbProduct.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tbProduct);

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfProductPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(tfProductStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(btProductAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btProductUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btProductDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfProductStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btProductAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btProductUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btProductDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Produk", productPanel);

        tbTransaction.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbTransaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTransaction.setRowHeight(30);
        tbTransaction.setShowHorizontalLines(true);
        jScrollPane2.setViewportView(tbTransaction);

        tbItemTransaction.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbItemTransaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbItemTransaction.setRowHeight(30);
        jScrollPane4.setViewportView(tbItemTransaction);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Transaksi", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Kasir");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btDeleteCartItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteCartItemActionPerformed
        Vector selectedItem = cartTableModel.getDataVector().elementAt(tbCart.convertRowIndexToModel(tbCart.getSelectedRow()));
        updateTotal(-1 * Double.parseDouble(selectedItem.elementAt(4).toString()));
        int selectedId = Integer.parseInt(selectedItem.elementAt(0).toString());
        listCart.removeIf(item -> item.getProductId() == selectedId);
        updateCartTable();
        // TODO handle stock
    }//GEN-LAST:event_btDeleteCartItemActionPerformed

    private void btAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddToCartActionPerformed
        int qty = Integer.parseInt(tfQuantity.getText());
        Vector product = searchTableModel.getDataVector().elementAt(tbSearchProduct.convertRowIndexToModel(tbSearchProduct.getSelectedRow()));

        Item item = new Item();
        item.setProductId(Integer.parseInt(product.elementAt(0).toString()));
        item.setName(product.elementAt(1).toString());
        item.setPrice(Double.parseDouble(product.elementAt(2).toString()));
        item.setQty(qty);
        item.setTotal(item.getPrice() * qty);

        addToCart(item);
        tfQuantity.setText("");
    }//GEN-LAST:event_btAddToCartActionPerformed

    private void tfSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchProductActionPerformed

    private void btPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPayActionPerformed
        txtNotEnough.setVisible(false);
        double amountPaid = Double.parseDouble(tfAmounPaid.getText());
        if (amountPaid >= totalPrice) {
            updateCashback(amountPaid - totalPrice);
        } else {
            txtNotEnough.setVisible(true);
        }

    }//GEN-LAST:event_btPayActionPerformed

    private void tfProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfProductNameActionPerformed

    private void tfProductPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfProductPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfProductPriceActionPerformed

    private void tfProductStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfProductStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfProductStockActionPerformed

    private void btProductAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProductAddActionPerformed
        Product product = new Product();
        String productName = tfProductName.getText();
        double productPrice = Double.parseDouble(tfProductPrice.getText());
        int productStock = Integer.parseInt(tfProductStock.getText());

        product.setName(productName);
        product.setPrice(productPrice);
        product.setStock(productStock);

        try {
            productDao.add(product);
            updateProductTable();
            clearProductFields();
        }catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btProductAddActionPerformed

    private void btProductUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProductUpdateActionPerformed
        Product product = new Product();
        String productName = tfProductName.getText();
        double productPrice = Double.parseDouble(tfProductPrice.getText());
        int productStock = Integer.parseInt(tfProductStock.getText());

        product.setId(Integer.parseInt(productTableModel.getValueAt(tbProduct.getSelectedRow(), 0).toString()));
        product.setName(productName);
        product.setPrice(productPrice);
        product.setStock(productStock);

        try {
            productDao.update(product);
            updateProductTable();
            clearProductFields();
        }catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btProductUpdateActionPerformed

    private void btProductDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProductDeleteActionPerformed
        int selectedId = Integer.parseInt(productTableModel.getValueAt(tbProduct.getSelectedRow(), 0).toString());
        try {
            productDao.delete(selectedId);
            updateProductTable();
            clearProductFields();
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btProductDeleteActionPerformed

    private void btSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchProductActionPerformed
        String search = tfSearchProduct.getText();
        updateSearchTable(search);
        tfSearchProduct.setText("");
    }//GEN-LAST:event_btSearchProductActionPerformed

    private void btSaveTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveTransactionActionPerformed
        try {
            Transaction transaction = new Transaction();
            transaction.setTotal(totalPrice);
            transaction.setDatetime(new Timestamp(System.currentTimeMillis()));
            transactionDao.add(transaction);

            transaction = transactionDao.getLatestTransaction();

            saveTransactionItem(transaction.getId());
            updateTransactionTable();
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

        clearKasirScreen();
        Notifications.getInstance().show(Notifications.Type.SUCCESS, Notifications.Location.TOP_RIGHT, "Transaksi berhasil disimpan!");
    }//GEN-LAST:event_btSaveTransactionActionPerformed

    private void saveTransactionItem(int id) {
        try {
            for (Item item : listCart) {
                item.setTransactionId(id);
                itemDao.add(item);
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    // ========= KASIR
    private void updateSearchTable(String name) {
        try {
            List<Product> productList;
            productList = productDao.getProducts(name);

            searchTableModel.setRowCount(0);

            for (Product product : productList) {
                if (product.getStock() > 0) {
                    searchTableModel.addRow(new Object[]{product.getId(), product.getName(), product.getPrice(), product.getStock()});
                }
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }
    private void setupSearchTable() {
        tbSearchProduct.setModel(searchTableModel);
        searchTableModel.addColumn("ID Produk");
        searchTableModel.addColumn("Nama");
        searchTableModel.addColumn("Harga");
        searchTableModel.addColumn("Stock");
    }

    private void addToCart(Item item) {
        listCart.add(item);
        // TODO handle stock
        updateTotal(item.getTotal());
        updateCartTable();
    }

    private void updateCartTable() {
        try {
            cartTableModel.setRowCount(0);
            for (Item item : listCart) {
                cartTableModel.addRow(new Object[]{item.getProductId(), item.getName(), item.getQty(), item.getPrice(), item.getTotal()});
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }

    private void setupCartTable() {
        tbCart.setModel(cartTableModel);
        cartTableModel.addColumn("ID Produk");
        cartTableModel.addColumn("Nama");
        cartTableModel.addColumn("Qty");
        cartTableModel.addColumn("Price");
        cartTableModel.addColumn("Total");
    }

    private void updateTotal(double change) {
        totalPrice += change;
        txtTotal.setText("Rp"+ totalPrice);
    }

    private void updateCashback(double cashBack) {
        txtCashback.setText("Rp"+ cashBack);
    }

    private void clearKasirScreen() {
        cartTableModel.setRowCount(0);
        updateTotal(-1 * totalPrice);
        updateCashback(0);
        tfQuantity.setText("");
        tfSearchProduct.setText("");
    }

    // ========= PRODUCT
    private void updateProductTable() {
        try {
            List<Product> productList = productDao.getProducts();
            productTableModel.setRowCount(0);
            for (Product product : productList) {
                productTableModel.addRow(new Object[]{product.getId(), product.getName(), product.getPrice(), product.getStock()});
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }

    private void setupProductTable() {
        tbProduct.setModel(productTableModel);
        productTableModel.addColumn("ID Produk");
        productTableModel.addColumn("Nama");
        productTableModel.addColumn("Harga");
        productTableModel.addColumn("Stock");

        tbProduct.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                Vector v = productTableModel.getDataVector().elementAt(tbProduct.convertRowIndexToModel(tbProduct.getSelectedRow()));
                tfProductName.setText(v.elementAt(1).toString());
                tfProductPrice.setText(v.elementAt(2).toString());
                tfProductStock.setText(v.elementAt(3).toString());
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
    }


    // ========= TRANSACTION
    private void updateTransactionTable() {
        try {
            List<Transaction> transactionList = transactionDao.getTransactions();
            transactionTableModel.setRowCount(0);
            for (Transaction transaction : transactionList) {
                transactionTableModel.addRow(new Object[]{transaction.getId(), transaction.getTotal(), transaction.getDatetime()});
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }

    private void setupTransactionTable() {
        tbTransaction.setModel(transactionTableModel);
        transactionTableModel.addColumn("ID Transaksi");
        transactionTableModel.addColumn("Total");
        transactionTableModel.addColumn("Waktu");

        tbTransaction.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                Vector v = transactionTableModel.getDataVector().elementAt(tbTransaction.convertRowIndexToModel(tbTransaction.getSelectedRow()));
                updateItemTable(Integer.parseInt(v.elementAt(0).toString()));
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
    }

    private void updateItemTable(int id) {
        try {
            List<Item> itemList = itemDao.getItems(id);
            itemTableModel.setRowCount(0);
            for (Item item : itemList) {
                itemTableModel.addRow(new Object[]{item.getName(), item.getQty(), item.getPrice(), item.getTotal()});
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }

    private void setupItemTable() {
        tbItemTransaction.setModel(itemTableModel);
        itemTableModel.addColumn("Nama");
        itemTableModel.addColumn("Qty");
        itemTableModel.addColumn("Harga");
        itemTableModel.addColumn("Total");
    }

    private void clearProductFields() {
        tfProductName.setText("");
        tfProductPrice.setText("");
        tfProductStock.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main mainPage = new Main();
                mainPage.setTitle("Kasir");
                mainPage.setVisible(true);
            }
        });
    }

    final ProductDaoImpl productDao = new ProductDaoImpl();
    final ItemDaoImpl itemDao = new ItemDaoImpl();
    final TransactionDaoImpl transactionDao = new TransactionDaoImpl();

    final DefaultTableModel productTableModel = new DefaultTableModel();
    final DefaultTableModel searchTableModel = new DefaultTableModel();
    final DefaultTableModel cartTableModel = new DefaultTableModel();
    final DefaultTableModel transactionTableModel = new DefaultTableModel();
    final DefaultTableModel itemTableModel = new DefaultTableModel();

    private List<Item> listCart = new ArrayList<>();
    private Double totalPrice = 0.0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddToCart;
    private javax.swing.JButton btDeleteCartItem;
    private javax.swing.JButton btPay;
    private javax.swing.JButton btProductAdd;
    private javax.swing.JButton btProductDelete;
    private javax.swing.JButton btProductUpdate;
    private javax.swing.JButton btSaveTransaction;
    private javax.swing.JButton btSearchProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel kasirPanel;
    private javax.swing.JPanel productPanel;
    private javax.swing.JTable tbCart;
    private javax.swing.JTable tbItemTransaction;
    private javax.swing.JTable tbProduct;
    private javax.swing.JTable tbSearchProduct;
    private javax.swing.JTable tbTransaction;
    private javax.swing.JTextField tfAmounPaid;
    private javax.swing.JTextField tfProductName;
    private javax.swing.JTextField tfProductPrice;
    private javax.swing.JTextField tfProductStock;
    private javax.swing.JTextField tfQuantity;
    private javax.swing.JTextField tfSearchProduct;
    private javax.swing.JLabel txtCashback;
    private javax.swing.JLabel txtNotEnough;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables
}
